# -*- coding: utf-8 -*-
# Generated by Django 1.10 on 2016-08-24 13:04
from __future__ import unicode_literals

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('language_code', models.CharField(choices=[(b'es', 'Spanish'), (b'en', 'English')], default=b'es', max_length=2)),
                ('category', models.CharField(max_length=200, unique=True)),
            ],
            options={
                'verbose_name_plural': 'Categories',
            },
        ),
        migrations.CreateModel(
            name='Phrase',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('phrase', models.CharField(max_length=200, unique=True)),
                ('image', models.ImageField(blank=True, upload_to=b'images/')),
                ('pronunciation', models.FileField(blank=True, upload_to=b'pronunciations/')),
                ('is_honorific', models.BooleanField(default=False)),
                ('thl_phonetic_transcription', models.CharField(blank=True, help_text='THL Simplified Phonetic Transcription of Standard Tibetan', max_length=200)),
                ('thl_wylie_transliteration', models.CharField(blank=True, help_text='THL Extended Wylie Transliteration', max_length=200)),
                ('categories', models.ManyToManyField(blank=True, related_name='phrase_category', to='core.Category')),
            ],
        ),
        migrations.CreateModel(
            name='Score',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=200)),
                ('score', models.PositiveSmallIntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='Translation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('translation', models.CharField(max_length=200, unique=True)),
                ('language_code', models.CharField(choices=[(b'es', 'Spanish'), (b'en', 'English')], default=b'es', max_length=2)),
                ('definition', models.TextField(blank=True)),
            ],
        ),
        migrations.CreateModel(
            name='Word',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('word', models.CharField(max_length=200, unique=True)),
                ('image', models.ImageField(blank=True, upload_to=b'images/')),
                ('pronunciation', models.FileField(blank=True, upload_to=b'pronunciations/')),
                ('is_honorific', models.BooleanField(default=False)),
                ('thl_phonetic_transcription', models.CharField(blank=True, help_text='THL Simplified Phonetic Transcription of Standard Tibetan', max_length=200)),
                ('thl_wylie_transliteration', models.CharField(blank=True, help_text='THL Extended Wylie Transliteration', max_length=200)),
                ('grammar', models.CharField(blank=True, max_length=200)),
                ('categories', models.ManyToManyField(blank=True, related_name='word_category', to='core.Category')),
                ('phrase', models.ManyToManyField(blank=True, related_name='word_phrase', to='core.Phrase')),
                ('translation', models.ManyToManyField(related_name='word_translation', to='core.Translation')),
            ],
        ),
        migrations.AddField(
            model_name='phrase',
            name='translation',
            field=models.ManyToManyField(blank=True, related_name='phrase_translation', to='core.Translation'),
        ),
    ]
